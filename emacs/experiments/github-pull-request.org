#+auto_tangle: y

found at [[https://takeonrules.com/2021/11/10/further-hacking-on-emacs-for-github-pull-requests/][takeonrules]] blog post

[[https://github.com/jakoblind/github-pullrequest/blob/master/github-pullrequest.el][another approach]]

#+begin_src emacs-lisp :async t :dir ~/ :prologue exec 2>&1 :epilogue "true" :results output
  (defun jnf/git-current-remote-url ()
    "Get the current remote url."
    (s-trim
     (shell-command-to-string
      (concat
       "git remote get-url "
       (format "%s" (magit-get-current-remote))))))

  (cl-defun jnf/open-pull-request-for (&key summary)
    "Given the SUMMARY open the related pull request."
    (let ((remote-url (jnf/git-current-remote-url)))
      (save-match-data
        (and (string-match "(\\#\\([0-9]+\\))$" summary)
             (eww-browse-with-external-browser
              (concat
               ;; I tend to favor HTTPS and the
               ;; repos end in ".git"
               (s-replace ".git" "" remote-url)
               "/pull/"
               (match-string 1 summary)))))))

  (defun jnf/magit-browse-pull-request ()
    "In `magit-log-mode' open the associated pull request
  at point.

  Assumes that the commit log title ends in the PR #, which
  is the case when you use the Squash and Merge strategy.

  This implementation is dependent on `magit' and `s'."
    (interactive)
    (let* ((beg (line-beginning-position))
           (end (line-end-position))
           (summary
            (buffer-substring-no-properties
             beg end)))
      (jnf/open-pull-request-for :summary summary)))

  (defun jnf/open-pull-request-for-current-line ()
    "For the current line open the applicable pull request."
    (interactive)
    (let ((summary
           (s-trim
            (shell-command-to-string
             (concat "git --no-pager annotate "
                     "-L "
                     (format "%s" (line-number-at-pos))
                     ",+1 "
                     "--porcelain "
                     buffer-file-name
                     " | rg \"^summary\"")))))
      (jnf/open-pull-request-for :summary summary)))

  (defun jnf/git-messenger-popup ()
    "Open `git-messenger' or github PR.

  With universal argument, open the github PR for
  current line.

  Without universal argument, open `git-messenger'."
    (interactive)
    (if (equal current-prefix-arg nil) ; no C-u
        (git-messenger:popup-message)
      (jnf/open-pull-request-for-current-line)))
#+end_src
